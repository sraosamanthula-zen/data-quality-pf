// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Backend",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.12-bookworm",
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/va-h/devcontainers-features/uv:1": {
			"shellautocompletion": true
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": {
		// "uv": "uv sync"
	},
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"charliermarsh.ruff",
				"-ms-python.autopep8",
				"tamasfe.even-better-toml",
				"samuelcolvin.jinjahtml",
				"ms-toolsai.jupyter",
				"ms-toolsai.datawrangler"
			],
			"settings": {
				"files.autoSave": "afterDelay",
				"editor.renderWhitespace": "all",
				"python.analysis.inlayHints.callArgumentNames": "all",
				"python.analysis.inlayHints.functionReturnTypes": true,
				"python.analysis.inlayHints.pytestParameters": true,
				"python.analysis.inlayHints.variableTypes": true,
				"python.analysis.typeCheckingMode": "standard",
				"[python]": {
					"editor.defaultFormatter": "charliermarsh.ruff"
				},
				"python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
				"launch": {
					"version": "0.2.0",
					"configurations": [],
					"compounds": []
				}
			}
		}
	},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "vscode",
	"remoteEnv": {
		"UV_LINK_MODE": "symlink"
	},
	"mounts": [
		{
			"source": "${localEnv:HOME}/.cache",
			"target": "/home/vscode/.cache",
			"type": "bind"
		},
		{
			"source": "${localEnv:HOME}/.ssh",
			"target": "/home/vscode/.ssh",
			"type": "bind"
		},
		{
			"source": "/nix/store",
			"target": "/nix/store",
			"type": "bind"
		}
	]
}